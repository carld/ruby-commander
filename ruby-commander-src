#!/bin/bash

VERSION=0.0.1
dst=~/.ruby-commander

echo "Ruby Commander $VERSION"
echo "source $dst  # add this line to ~/.bash_profile "

tmp_dir=/tmp

upstream_ruby_index=http://cache.ruby-lang.org/pub/ruby/
upstream_version_match='s/.*ruby-\(.*\)\.tar\.gz.*/\1/p'
upstream_ruby_versions=/tmp/available-ruby-versions

local_ruby_index=/opt
local_version_match='s/.*ruby-\(.*\).*/\1/p'
local_ruby_versions=/tmp/local-ruby-versions

_ruby_commander_update_indexes()
{
echo "Updating indexes... "
curl -v -o $upstream_ruby_versions $upstream_ruby_index
sed -n -e $upstream_version_match -i _sed $upstream_ruby_versions
if [ $? -ne 0 ]; then
  echo "  Error updating upstream index."
else
  echo "  $(wc -l $upstream_ruby_versions) upstream versions."
fi
ls $local_ruby_index | sed -n $local_version_match > $local_ruby_versions
echo "  $(wc -l $local_ruby_versions) local versions."
return 0
}

_ruby_commander_completion()
{
  local cur=${COMP_WORDS[COMP_CWORD]}
  local prev=${COMP_WORDS[COMP_CWORD-1]}
  #echo -n "$COMP_CWORD "
  COMPREPLY=()
  case "$prev" in
    install)
      words=$(cat $upstream_ruby_versions | paste -s -)
      COMPREPLY=( $( compgen -W '$words' -- $cur ) )
    ;;
    use|uninstall)
      words=$(cat $local_ruby_versions | paste -s -)
      COMPREPLY=( $( compgen -W '$words' -- $cur ) )
    ;;
    *)
      COMPREPLY=()
      ;;
  esac
  if [ $COMP_CWORD -eq 1 ]; then
    COMPREPLY=( $( compgen -W 'install uninstall use update help environment' -- $cur ) )
  fi
  return 0
}

function ruby-commander()
{
case $1 in
  install)
    set -o verbose
    cur_dir=$(pwd)
    tarball=ruby-$2.tar.gz
    cd $tmp_dir
    curl -v -o $tarball $upstream_ruby_index$tarball
    tar zxvf $tarball
    cd $tmp_dir/ruby-$2
    ./configure --prefix=$local_ruby_index/ruby-$2
    make
    sudo make install
    cd $cur_dir
    set +o verbose
    _ruby_commander_update_indexes
  ;;
  uninstall)
    set -o verbose
    directory=$local_ruby_index/ruby-$2
    rm -rv $directory
    set +o verbose
  ;;
  use)
    set -o verbose
    directory=$local_ruby_index/ruby-$2
    NEW_PATH=$(echo $PATH | sed -r -e 's|(/opt/ruby-[0-9a-Z\.\-]+/bin:?)||g')
    NEW_PATH=$NEW_PATH:$directory/bin
    export PATH=$NEW_PATH
    echo $PATH
    which -a ruby
    gem env
    set +o verbose
  ;;
  help)
cat <<-EOF
$VERSION
ruby-commander [action] [version]

  use [version]           Modify PATH to contain the path to the version
                          of ruby installed at $local_ruby_index/[version]
  install [version]       Install [version] of ruby by downloading from 
                          ruby-lang.org and compiling and installing 
                          to $local_ruby_index/[version]
  uninstall [version]     Remove [version] of ruby from $local_ruby_index/[version]
  update                  Update the local cache of both remote versions
                          of ruby available from ruby-lang.org and
                          local versions of ruby available from $local_ruby_index 
  environment             Show the directories and files used
  help                    This help

Bash tab completion is enabled to assist with discovering [action]
and [version].
EOF
  ;;
  env*)
cat <<-EOF
  Remote ruby location:                        $upstream_ruby_index
  List of remotely available ruby versions:    $upstream_ruby_versions
  Local installation directory:                $local_ruby_index
  List of locally available ruby versions:     $local_ruby_versions
  Compilation directory:                       $tmp_dir
EOF
  ;;
  update|*)
    _ruby_commander_update_indexes
  ;;
esac 
  return 0
}

complete -F _ruby_commander_completion ruby-commander
